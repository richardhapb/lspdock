name: Release
on:
  push:
    tags: ["v*"]
  workflow_dispatch:
permissions:
  contents: write

jobs:
  test:
    uses: ./.github/workflows/test.yml

  build:
    needs: test # Only build if tests pass
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            use_cross: true
          - target: x86_64-pc-windows-gnu
            runner: ubuntu-latest
            use_cross: true
          - target: aarch64-apple-darwin
            runner: macos-latest
            use_cross: false

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install cross (Ubuntu only)
        if: ${{ matrix.use_cross }}
        run: cargo install cross

      - name: Clean before cross to avoid glibc mix
        if: ${{ matrix.use_cross }}
        run: cargo clean

      - name: Build release binary
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --locked --release --target ${{ matrix.target }} -v
          else
            cargo build --locked --release --target ${{ matrix.target }} -v
          fi

      - name: Package artifact
        run: |
          mkdir -p dist
          BIN=lspdock
          EXT=""
          ARCHIVE_EXT="tar.gz"
          COMPRESS_CMD="tar czf"
          if [[ "${{ matrix.target }}" == *windows* ]]; then
            EXT=".exe"
            ARCHIVE_EXT="zip"
            COMPRESS_CMD="zip -r"
          fi
          cp target/${{ matrix.target }}/release/$BIN$EXT dist/
          pushd dist
          eval $COMPRESS_CMD "${BIN}-${{ matrix.target }}.$ARCHIVE_EXT" "$BIN$EXT"
          popd

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: lspdock-${{ matrix.target }}
          path: dist/lspdock-${{ matrix.target }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
