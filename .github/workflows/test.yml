name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call: # reusable by other workflows

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test - ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Linux
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use_cross: true

          # Windows
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc

          - os_name: Windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu

          # macOS
          - os_name: macOS-x86_64
            os: macos-13 # Intel
            target: x86_64-apple-darwin

          - os_name: macOS-aarch64
            os: macos-latest # Apple Silicon
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cross
        if: matrix.platform.use_cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          if [[ "${{ matrix.platform.use_cross }}" == "true" ]]; then
            # Force cross to rebuild build scripts in container
            rm -rf target/debug/build
            cross build --target ${{ matrix.platform.target }} --verbose
          else
            cargo build --target ${{ matrix.platform.target }} --verbose
          fi
        shell: bash

      - name: Test
        run: |
          if [[ "${{ matrix.platform.use_cross }}" == "true" ]]; then
            cross test --target ${{ matrix.platform.target }} --verbose
          else
            cargo test --target ${{ matrix.platform.target }} --verbose
          fi
        shell: bash

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
